#!/bin/bash

set -e

# Configuration Script
# Written by Leon Krieg <info@madcow.dev>

# Run this script before invoking make to setup the environment according to
# your current operating system and architecture. You only need to run it once
# after a fresh clone. Build settings for install prefix and features will be
# added as command-line flags later on.

ROOTDIR=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
GCCDIR=/usr/lib/gcc/x86_64-w64-mingw32/12-win32
LIBDIR=$ROOTDIR/bin/win32
EXPORT=$ROOTDIR/.settings.mk

rm -f "$EXPORT"

if [ "$(uname -m)" != x86_64 ]; then
	echo "[SH] Error: 64-bit operating system required."
	exit 1
fi

if ! command -v dpkg apt &> /dev/null; then
	echo "[SH] Error: Debian-based distribution required."
	exit 1
fi

# For windows targets we distribute the libgcc and libstdc++ runtime libraries.
# The sources are made available by the GNU project at https://gcc.gnu.org/git.
# The GCC Runtime Library Exception covers our use for either static or dynamic
# linking with both libraries as long as we provide those source files and the
# terms of the GPLv3 will not extend to our own files.

mkdir -p "$LIBDIR"
cp -f "$GCCDIR"/{libgcc_s_seh-1,libstdc++-6}.dll "$LIBDIR"
echo "[SH] Copied required runtime libraries."

OS=WIN32; grep -iq microsoft /proc/version || OS=LINUX
echo "[SH] Saving build settings to '$EXPORT'."

# Settings for Make
cat <<EOF > $EXPORT
OS := $OS
EOF

# XXX: Call required scripts and export settings.
echo "[SH] Build configuration was successful."
